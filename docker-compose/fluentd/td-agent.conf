<source>
  @type tail
  format /^(?<clientip>.*?) (?<ident>.*?) (?<auth>.*?) \[(?<time>.*?)\] "(?<verb>.*?) (?<request>.*?) HTTP\/(?<httpversion>.*?)" (?<response>.*?) (?<bytes>.*?) (?<requestTime>.*?) \"(?<referer>.*?)\" \"(?<agent>.*?)\"\s*(?<userId>.*?)?$/
  time_format %d/%b/%Y:%H:%M:%S %z
  path "#{ENV['APP_HOME']}/logs/access_admin.log"
  pos_file "/app/fluentd/access_admin.pos"
  tag faip-access-admin
  refresh_interval 3s
</source>

<source>
  @type tail
  format /^(?<clientip>.*?) (?<ident>.*?) (?<auth>.*?) \[(?<time>.*?)\] "(?<verb>.*?) (?<request>.*?) HTTP\/(?<httpversion>.*?)" (?<response>.*?) (?<bytes>.*?) (?<requestTime>.*?) \"(?<referer>.*?)\" \"(?<agent>.*?)\"/
  time_format %d/%b/%Y:%H:%M:%S %z
  path "#{ENV['APP_HOME']}/logs/access.log"
  pos_file "/app/fluentd/access.pos"
  tag faip-access
  refresh_interval 3s
</source>

<source>
  @type tail
  format /^(?<clientip>.*?) (?<ident>.*?) (?<auth>.*?) \[(?<time>.*?)\] "(?<verb>.*?) (?<request>.*?) HTTP\/(?<httpversion>.*?)" (?<response>.*?) (?<bytes>.*?) (?<requestTime>.*?) \"(?<agent>.*?)\" \"(?<user_id>.*?)\"\s*(?<token>\".*?\")?/
  time_format %Y-%m-%dT%H:%M:%S.%N
  path "#{ENV['APP_HOME']}/logs/access_gw.log"
  pos_file "/app/fluentd/access_gw.pos"
  tag faip-access-gw
  refresh_interval 3s
</source>

<source>
  @type tail
  format multiline
  format_firstline /^\[/
  format1 /^\[(?<log_level>.*?)\s*]\s+(?<time>.*?)\s+:\s+\[(?<className>.*?):(?<line>.*?)\]\s+\[(?<threadName>.*?)\]\s+-\s+(?<data>.*)$/
  time_format %Y-%m-%d %H:%M:%S.%L
  path "#{ENV['APP_HOME']}/logs/application.log"
  pos_file "/app/fluentd/application.pos"
  tag faip-app
  refresh_interval 3s
</source>

<filter faip-access-admin>
  @type record_transformer
  <record>
    pod_name "#{Socket.gethostname}"
    service_name "#{ENV['APP_ENV']}_access_#{ENV['APP_NAME']}"
    faip_timestamp ${Time.at(time).iso8601(3)}
    env "#{ENV['APP_ENV']}"
  </record>
  enable_ruby
</filter>
<filter faip-access>
  @type record_transformer
  <record>
    pod_name "#{Socket.gethostname}"
    service_name "#{ENV['APP_ENV']}_access_#{ENV['APP_NAME']}"
    faip_timestamp ${Time.at(time).iso8601(3)}
    env "#{ENV['APP_ENV']}"
  </record>
  enable_ruby
</filter>
<filter faip-access-gw>
  @type record_transformer
  <record>
    pod_name "#{Socket.gethostname}"
    service_name "#{ENV['APP_ENV']}_access_#{ENV['APP_NAME']}"
    faip_timestamp ${Time.at(time).iso8601(3)}
    env "#{ENV['APP_ENV']}"
  </record>
  enable_ruby
</filter>
<filter faip-app>
  @type record_transformer
  <record>
    pod_name "#{Socket.gethostname}"
    service_name "#{ENV['APP_ENV']}_app_#{ENV['APP_NAME']}"
    faip_timestamp ${Time.at(time).iso8601(3)}
    env "#{ENV['APP_ENV']}"
  </record>
  enable_ruby
</filter>

<filter faip-access**>
    @type grep
    <exclude>
      key request
      pattern /^(?:\/readiness|\/)$/
    </exclude>
</filter>

<match faip**>
    @type copy
    <store>
        @type relabel
        @label @faip-access-gw
    </store>
    <store>
        @type relabel
        @label @faip-all
    </store>
</match>

<label @faip-access-gw>
    <match faip-access-gw>
        @type kafka2
        brokers "#{ENV['FAIP_KAFKA_BROKERS']}"
        topic_key "#{ENV['FAIP_KAFKA_ACCESS_TOPIC']}"
        default_topic "#{ENV['FAIP_KAFKA_ACCESS_TOPIC']}"
        <buffer "#{ENV['FAIP_KAFKA_ACCESS_TOPIC']}">
            @type file
            path "/app/fluentd/faip-access-gw_buf"
            flush_interval 1s
            flush_thread_count 10
        </buffer>
        <format>
            @type json
        </format>
        ignore_same_log_interval 10s
        max_send_limit_bytes 2000000
    </match>
</label>

<label @faip-all>
    <match faip**>
        @type kafka2
        brokers "#{ENV['LOGIS_KAFKA_BROKERS']}"
        topic_key "#{ENV['LOGIS_KAFKA_TOPIC']}"
        default_topic "#{ENV['LOGIS_KAFKA_TOPIC']}"
        <buffer "#{ENV['LOGIS_KAFKA_TOPIC']}">
            @type file
            path "/app/fluentd/faip_buf"
            flush_interval 1s
            flush_thread_count 10
        </buffer>
        <format>
            @type json
        </format>
        ignore_same_log_interval 10s
        max_send_limit_bytes 2000000
    </match>
</label>